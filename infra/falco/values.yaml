falco:
  collectors:
    containerd:
      enabled: true
      socket: /run/k3s/containerd/containerd.sock
  metrics:
    enabled: true
    service:
      create: true
  grafana:
    dashboards:
      enabled: true
      configMaps:
        falco:
          namespace: prometheus-stack
  serviceMonitor:
    create: true
    namespace: prometheus-stack
    labels:
      release: kube-prometheus-stack
  customRules:
    rules-exceptions.yaml: |-
      - rule: Contact K8S API Server From Container
        desc: >
          Detect attempts to communicate with the K8S API Server from a container by non-profiled users. Kubernetes APIs play a
          pivotal role in configuring the cluster management lifecycle. Detecting potential unauthorized access to the API server
          is of utmost importance. Audit your complete infrastructure and pinpoint any potential machines from which the API server
          might be accessible based on your network layout. If Falco can't operate on all these machines, consider analyzing the
          Kubernetes audit logs (typically drained from control nodes, and Falco offers a k8saudit plugin) as an additional data
          source for detections within the control plane.
        condition: >
          evt.type=connect and evt.dir=<
          and (fd.typechar=4 or fd.typechar=6)
          and container
          and k8s_api_server
          and not k8s_containers
          and not user_known_contact_k8s_api_server_activities
        exception:
          - name: argocd
            fields: [process, command]
            comps: [=, =]
            values:
              - [kustomize-contr, argocd-applicat]
          - name: flux-image-updater
            fields: [process, proc_exepath]
            comps: [=, =]
            values:
              - [kustomize-contr, /usr/local/bin/kustomize-controller]
          - name: loki-fluent-bit
            fields: [proc_exepath, k8s_ns_name]
            comps: [=, =]
            values:
              - [/fluent-bit/bin/fluent-bit, loki]
          - name: flux
            fields: [process, proc_exepath]
            comps: [=, =]
            values:
              - [kustomize-contr, /usr/local/bin/kustomize-controller]
          - name: prom-sidecar
            fields: [container_image_repository, k8s_ns_name]
            comps: [=, =]
            values:
              - [quay.io/kiwigrid/k8s-sidecar, prometheus-stack]
          - arc-sync-agent
            fields: [container_image_repository, k8s_ns_name]
            comps: [=, =]
            values:
              - [mcr.microsoft.com/azurearck8s/resource-sync, azure-arc]
        output: Unexpected connection to K8s API Server from container | connection=%fd.name lport=%fd.lport rport=%fd.rport fd_type=%fd.type fd_proto=%fd.l4proto evt_type=%evt.type user=%user.name user_uid=%user.uid user_loginuid=%user.loginuid process=%proc.name proc_exepath=%proc.exepath parent=%proc.pname command=%proc.cmdline terminal=%proc.tty
        priority: NOTICE
        tags: [maturity_stable, container, network, k8s, mitre_discovery, T1565]
